(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{480:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"小技巧和注意点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小技巧和注意点"}},[s._v("#")]),s._v(" 小技巧和注意点")]),s._v(" "),t("p",[s._v("1、可以使用set对数组去重")]),s._v(" "),t("p",[s._v("2、python没有++ -- ！ 没有null 只有 None")]),s._v(" "),t("p",[s._v("3、逻辑判断用的是 or and")]),s._v(" "),t("p",[s._v("4、ctl+/ 可以快速注释多行代码")]),s._v(" "),t("p",[s._v("5、没有赋值或者作用域出现问题，都会导致变量报错，类似local variable 'player1_img' referenced before assignment")]),s._v(" "),t("p",[s._v("6、在终端执行")]),s._v(" "),t("div",{staticClass:"language-powershell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("pip install KafkaProducer\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("命令时，出现no matching distribution found for XXX 或 Read timed out等问题")]),s._v(" "),t("p",[s._v("解决方案：把命令改为")]),s._v(" "),t("div",{staticClass:"language-powershell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("pip install KafkaProducer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("default-timeout=100 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("i https:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("pypi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tuna"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tsinghua"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("edu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cn/simple\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("7、conda点击图标闪退")]),s._v(" "),t("div",{staticClass:"language-powershell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("管理员权限运行anaconda prompt\n2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("升级conda：\nconda update anaconda-navigator\n\n3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("重置navigator: \nanaconda-navigator "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("reset\n\n4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("升级客户端：\nconda update anaconda-client\n\n5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("升级安装依赖包：\nconda update "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("f anaconda-client\n\n6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("再尝试打开anaconda\n\n7"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("如果上方出现更新较慢，可以添加镜像源，加快速度：\nconda config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("add channels https:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mirrors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ustc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("edu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cn/anaconda/pkgs/free/\nconda config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("add channels https:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mirrors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ustc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("edu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cn/anaconda/pkgs/main/\nconda config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),s._v(" show_channel_urls yes\n\n8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("查看是否添加上源了：\nconda config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("show（看channels属性下是否有上方添加的两个镜像了）\n\n9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("如果镜像失效，删除镜像：\nconda config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("remove channels https:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mirrors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ustc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("edu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cn/anaconda/pkgs/free/\n\n在cmd中输入Anaconda-Navigator启动\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h2",{attrs:{id:"基础语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础语法"}},[s._v("#")]),s._v(" 基础语法")]),s._v(" "),t("h3",{attrs:{id:"标识符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[s._v("#")]),s._v(" 标识符")]),s._v(" "),t("p",[s._v("1、第一个字符必须是字母表中字母或下划线 _ 。\n2、标识符的其他的部分由字母、数字和下划线组成。\n3、标识符对大小写敏感。")]),s._v(" "),t("h3",{attrs:{id:"多行语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多行语法"}},[s._v("#")]),s._v(" 多行语法")]),s._v(" "),t("p",[s._v("通过\\ 换行，数组 元组  字典内部的换行不用使用")]),s._v(" "),t("p",[s._v("例如 total = item_one +\nitem_two +\nitem_three")]),s._v(" "),t("h3",{attrs:{id:"字符串的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串的使用"}},[s._v("#")]),s._v(" 字符串的使用")]),s._v(" "),t("p",[s._v("\"\"\" \"\"\" or ''' ''' 这个可以多行字符，不需要使用转义 \\")]),s._v(" "),t("h3",{attrs:{id:"导包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导包"}},[s._v("#")]),s._v(" 导包")]),s._v(" "),t("p",[s._v("使用 import 与 from...import")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("将整个模块"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("somemodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("导入，格式为： "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" somemodule\n\n从某个模块中导入某个函数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("格式为： "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" somemodule "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" somefunction\n\n从某个模块中导入多个函数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("格式为： "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" somemodule "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" firstfunc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" secondfunc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" thirdfunc\n\n将某个模块中的全部函数导入，格式为： "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" somemodule "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),t("p",[s._v("--前三个为不可变数据类型 后三个为可变数据类型\n--类型判断使用type()函数和isinstance(数据,类型)\n--显示（使用函数强转）和隐示转换")]),s._v(" "),t("h3",{attrs:{id:"number-数字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#number-数字"}},[s._v("#")]),s._v(" Number（数字）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("int -- 整形的所有\nfloat -- 浮点型\nbool -- 布尔型\ncomplex -- 复数型 例如 4+3j （比较特别）\n")])])]),t("h3",{attrs:{id:"string-字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[s._v("#")]),s._v(" String（字符串）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v('需要注意的是在字符串前跟 r 字符串中的转义符号就会失效 一般使用在路径上\n例如： dir_name = r"c\\ean:nong "\n')])])]),t("h3",{attrs:{id:"tuple-元组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tuple-元组"}},[s._v("#")]),s._v(" Tuple（元组）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("使用的符号是()\n值是不可修改\n但是可以查询  查询方式是使用下标查询\n")])])]),t("h3",{attrs:{id:"list-列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list-列表"}},[s._v("#")]),s._v(" List（列表）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("使用的符号是[]\n")])])]),t("h3",{attrs:{id:"set-集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-集合"}},[s._v("#")]),s._v(" Set（集合）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("使用符号{} 或者 set(val)\n空集合必须通过set()创建\n这个数据类型就像数学中的那个集合，可以计算交并集\n")])])]),t("h3",{attrs:{id:"dictionary-字典"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dictionary-字典"}},[s._v("#")]),s._v(" Dictionary（字典）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("使用的符号是 {}\n不同于前面的数据，这里的数据存在方式是键值对的方式\n查询也是通过键值对查询\n")])])]),t("h3",{attrs:{id:"常见的数据类型转换函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的数据类型转换函数"}},[s._v("#")]),s._v(" 常见的数据类型转换函数")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("int(x [,base])          将x转换为一个整数\n\nfloat(x)                将x转换到一个浮点数\n\ncomplex(real [,imag])   创建一个复数\n\nstr(x)                  将对象 x 转换为字符串\n\nrepr(x)                 将对象 x 转换为表达式字符串\n\neval(str)               用来计算在字符串中的有效Python表达式,并返回一个对象\n\ntuple(s)                将序列 s 转换为一个元组\n\nlist(s)                 将序列 s 转换为一个列表\n\nset(s)                  转换为可变集合\n\ndict(d)                 创建一个字典。d 必须是一个 (key, value)元组序列。\n\nfrozenset(s)            转换为不可变集合\n\nchr(x)                  将一个整数转换为一个字符 这个应该是和ASII码对应\n\nord(x)                  将一个字符转换为它的整数值 这个应该是和ASII码对应\n\nhex(x)                  将一个整数转换为一个十六进制字符串\n\noct(x)                  将一个整数转换为一个八进制字符串\n\nabs(x)                  求x的绝对值\n")])])]),t("h2",{attrs:{id:"推导式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推导式"}},[s._v("#")]),s._v(" 推导式")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("这是python的一个特点\n可以应用在list tuple dictionary set\n作用类似js里面的map可以执行一个回调或对以上数据进行一个处理\n\n例如：\n# 列表的推导式\n    list = [i for i in range(0,10)]\n    print(list)\n    print(type(list))\n    # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    # <class 'list'>\n\n# 元组的推导式\n    t = (i for i in range(0,10))\n    print(t)\n    print(type(t)) # 这里返回的是生成器对象 需要是用tuple转为元组\n    tu = tuple(t)\n    print(tu)\n    print(type(tu))\n    # <generator object`<genexpr>` at 0x000002AB8D68BBA0>\n    # <class 'generator'>\n    # (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n    # <class 'tuple'>\n\n# 集合的推导式\n    s = {i for i in range(0,10)}\n    print(s)\n    print(type(s))\n    # {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}\n    # <class 'set'>\n\n# 字典的推导式\n    d = {i: i for i in range(0,10)}\n    print(d)\n    print(type(d))\n    # {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9}\n    # <class 'dict'>\n")])])]),t("h2",{attrs:{id:"运算符号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运算符号"}},[s._v("#")]),s._v(" 运算符号")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("是有优先级的\n和c相比特殊的地方\n计算和比较、赋值、位运算、逻辑运算符号外\n\n逻辑运算使用的 and or not 去代表与或非  这个应用在判断条件上\n\n成员运算符使用 in  not in 来判断包括字符串，列表或元组中是否含有该成员\n\n身份运算符使用 is  not is 来比较两个对象的存储单元 可以使用id()函数获取存储单元\n")])])]),t("h2",{attrs:{id:"解释器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解释器"}},[s._v("#")]),s._v(" 解释器")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("Python 解释器可不止一种哦，有 CPython、IPython、Jython、PyPy 等。\n\nCPython 就是用 C 语言开发的了，是官方标准实现，拥有良好的生态，所以应用也就最为广泛了。\n\nIPython 是在 CPython 的基础之上在交互式方面得到增强的解释器（http://ipython.org/）。\n\nJython 是专为 Java 平台设计的 Python 解释器（http://www.jython.org/），它把 Python 代码编译成 Java 字节码执行。\n\nPyPy 是 Python 语言（2.7.13和3.5.3）的一种快速、兼容的替代实现（http://pypy.org/），以速度快著称\n")])])]),t("h2",{attrs:{id:"迭代器与生成器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代器与生成器"}},[s._v("#")]),s._v(" 迭代器与生成器")]),s._v(" "),t("p",[s._v("优雅的访问set和需要循环的列表等")]),s._v(" "),t("p",[s._v("一个迭代器类需要有: iter和next")]),s._v(" "),t("p",[t("strong",[s._v("iter")]),s._v("() 方法返回一个特殊的迭代器对象， 这个迭代器对象实现了 "),t("strong",[s._v("next")]),s._v("() 方法并通过 StopIteration 异常标识迭代的完成。")]),s._v(" "),t("p",[t("strong",[s._v("next")]),s._v("() 方法（Python 2 里是 next()）会返回下一个迭代器对象。")]),s._v(" "),t("p",[s._v("StopIteration是异常用于标识迭代的完成")]),s._v(" "),t("h2",{attrs:{id:"面向对象和类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象和类"}},[s._v("#")]),s._v(" 面向对象和类")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("类(Class):")]),s._v(" 用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。")])]),s._v(" "),t("li",[t("p",[s._v("**方法：**类中定义的函数。")])]),s._v(" "),t("li",[t("p",[s._v("**类变量：**类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。")])]),s._v(" "),t("li",[t("p",[s._v("**数据成员：**类变量或者实例变量用于处理类及其实例对象的相关的数据。")])]),s._v(" "),t("li",[t("p",[s._v("**方法重写：**如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。")])]),s._v(" "),t("li",[t("p",[s._v("**局部变量：**定义在方法中的变量，只作用于当前实例的类。")])]),s._v(" "),t("li",[t("p",[s._v("**实例变量：**在类的声明中，属性是用变量来表示的，这种变量就称为实例变量，实例变量就是一个用 self 修饰的变量。")])]),s._v(" "),t("li",[t("p",[s._v('**继承：**即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。例如，有这样一个设计：一个Dog类型的对象派生自Animal类，这是模拟"是一个（is-a）"关系（例图，Dog是一个Animal）。')])]),s._v(" "),t("li",[t("p",[s._v("**实例化：**创建一个类的实例，类的具体对象。")])]),s._v(" "),t("li",[t("p",[s._v("**对象：**通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("类的私有属性")])]),s._v(" "),t("p",[t("strong",[s._v("__private_attrs")]),s._v("：两个下划线开头，声明该属性为私有，不能在类的外部被使用或直接访问。在类内部的方法中使用时 "),t("strong",[s._v("self.__private_attrs")]),s._v("。"),t("strong",[s._v("self")]),s._v(" 的名字并不是规定死的，也可以使用 "),t("strong",[s._v("this")]),s._v("，但是最好还是按照约定使用 "),t("strong",[s._v("self")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("__private_method")]),s._v("：两个下划线开头，声明该方法为私有方法，只能在类的内部调用 ，不能在类的外部调用。"),t("strong",[s._v("self.__private_methods")]),s._v("()。")])])]),s._v(" "),t("p",[s._v("类的继承机制允许多个基类，派生类可以覆盖基类中的任何方法，方法中可以调用基类中的同名方法。（这样可能不具有多态功能）")]),s._v(" "),t("h5",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("people")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#定义基本属性")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义私有属性,私有属性在类外部无法直接进行访问")]),s._v("\n    __weight "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义构造方法")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("w"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__weight "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" w\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("speak")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s 说: 我 %d 岁。"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单继承示例")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("student")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("people"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    grade "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("w"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#调用父类的构函")]),s._v("\n        people"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__init__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("w"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" g\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重写父类的方法")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("speak")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s 说: 我 %d 岁了，我在读 %d 年级"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#另一个类，多重继承之前的准备")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("speaker")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("speak")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我叫 %s，我是一个演说家，我演讲的主题是 %s"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多重继承")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sample")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("speaker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("w"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__init__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("w"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        speaker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__init__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \ntest "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sample"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tim"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Python"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("speak"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#方法名同，默认调用的是在括号中参数位置（speaker,student）排前父类的方法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我叫 Tim，我是一个演说家，我演讲的主题是 Python")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br")])]),t("h5",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),t("p",[s._v("self 是指向类所创建的实例。")]),s._v(" "),t("p",[s._v("支持运算符号重载类似C++")]),s._v(" "),t("h2",{attrs:{id:"装饰器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装饰器"}},[s._v("#")]),s._v(" 装饰器")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/qq_22918243/article/details/127484172",target:"_blank",rel:"noopener noreferrer"}},[s._v("博客地址"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("使用符号为@\npython装饰器本质上是一个函数，可以让其他函数在不需要做任何代码变动的前提下添加额外功能，\n装饰器的返回值也是一个函数对象。简单的说装饰器就是一个用来返回函数的函数。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("decro")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("func"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wrapper")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("kwargs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wrapper"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" func"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" wrapper\n\n"),t("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@decro")]),s._v("  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n\ntest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# wrapper")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("1、"),t("strong",[s._v("执行流程")]),s._v("是先执行完装饰器中的内容，在执行加入装饰器函数中的内容")]),s._v(" "),t("p",[s._v("2、加入装饰器会使得原函数的"),t("strong",[s._v("函数信息")]),s._v(" "),t("code",[s._v("__name__")]),s._v(" 和 "),t("code",[s._v("__doc__")]),s._v(" 变成 装饰器的信息")]),s._v(" "),t("p",[s._v("3、不改变函数信息的方式是引入wraps装饰器并在装饰器的执行函数中装饰。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" functools "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" wraps  \n  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("decro")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("func"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n  \n    "),t("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@wraps")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("func"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wrapper")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("kwargs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" wrapper doc """')]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wrapper"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" func"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("kwargs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" wrapper  \n  \n"),t("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@decro")]),s._v("  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" test doc """')]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调用原函数")]),s._v("\ntest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__wrapped__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h2",{attrs:{id:"并发编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并发编程"}},[s._v("#")]),s._v(" 并发编程")]),s._v(" "),t("h4",{attrs:{id:"多进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多进程"}},[s._v("#")]),s._v(" 多进程")]),s._v(" "),t("p",[s._v("multiprocessing包 Process类")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" multiprocessing "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Process\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text Process"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nProcess_text "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nProcess_text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开始进程")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h4",{attrs:{id:"多线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[s._v("#")]),s._v(" 多线程")]),s._v(" "),t("p",[s._v("Threading的包 中的threading类，python自带的")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" threading "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Thread\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text threading"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nthread_text "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Thread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nthread_text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开始线程，每个线程只能开始一次")]),s._v("\nthreading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("enumerate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前线程池，返回list")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("线程的结束是内部run()，即被cpu执行完毕。如何下次要start，可以重新写一个线程，前面的会被python自动回收")]),s._v(" "),t("h3",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),t("h2",{attrs:{id:"算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[s._v("#")]),s._v(" 算法")]),s._v(" "),t("h3",{attrs:{id:"数组去重"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[s._v("#")]),s._v(" 数组去重")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用set对数值去重复")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nres "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ns "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);