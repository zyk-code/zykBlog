(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{481:function(t,a,s){"use strict";s.r(a);var n=s(2),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境配置"}},[t._v("#")]),t._v(" 环境配置")]),t._v(" "),a("p",[t._v("使用anconda配置")]),t._v(" "),a("p",[t._v("conda info -e 查看当前创建的所有环境")]),t._v(" "),a("p",[t._v("conda create -n torch python=3.6 创建名为torch的环境，后面跟python版本，其他同理")]),t._v(" "),a("p",[t._v("activate torch 激活 torch环境，激活其他的环境同理")]),t._v(" "),a("p",[t._v("然后就可以在环境中安装包")]),t._v(" "),a("p",[t._v("conda deactivate  退出当前环境")]),t._v(" "),a("h4",{attrs:{id:"环境管理-conda-env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境管理-conda-env"}},[t._v("#")]),t._v(" 环境管理  conda env")]),t._v(" "),a("p",[t._v("可以跟list remove 等指令查看和删除环境等")]),t._v(" "),a("p",[t._v("pycharm使用环境")]),t._v(" "),a("h2",{attrs:{id:"相关知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关知识点"}},[t._v("#")]),t._v(" 相关知识点")]),t._v(" "),a("h5",{attrs:{id:"线性回归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性回归"}},[t._v("#")]),t._v(" 线性回归")]),t._v(" "),a("p",[t._v("简单的回归")]),t._v(" "),a("p",[t._v("求解一个方程 y= ax + b")]),t._v(" "),a("p",[t._v("梯度下降")]),t._v(" "),a("h2",{attrs:{id:"pytorch的基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pytorch的基本使用"}},[t._v("#")]),t._v(" pytorch的基本使用")]),t._v(" "),a("h4",{attrs:{id:"使用记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用记录"}},[t._v("#")]),t._v(" 使用记录")]),t._v(" "),a("p",[t._v("1、tensor <==> numpy")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" torch\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" numpy "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" np\n\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx_numpy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("numpy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_numpy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#<class 'numpy.ndarray'>")]),t._v("\n\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ny_tensor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_numpy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y_tensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#<class 'torch.Tensor'>")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("2、注意如果创建的tensor 的梯度。 numpy是可以直接将tensor转numpy,但是没有梯度信息，要保留梯度回传的计算图就需要detach")]),t._v(" "),a("h4",{attrs:{id:"创建tensor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建tensor"}},[t._v("#")]),t._v(" 创建tensor")]),t._v(" "),a("p",[t._v("empty 创建未初始化的矩阵 可以跟size")]),t._v(" "),a("p",[t._v("randon 创建随机值的矩阵")]),t._v(" "),a("p",[t._v("zeros 创建值为0的矩阵，可以跟type")]),t._v(" "),a("p",[t._v("tensor 创建一个指定值的对象，可以跟list，该方式为使用构造函数创建")]),t._v(" "),a("p",[t._v("new_ones  和 randn_like可以在已有的tensor中创建出一个新的tensor （具体作用不清楚）")]),t._v(" "),a("p",[t._v("size 可以查看tensor的大小，返回为一个元组")]),t._v(" "),a("p",[t._v("add（） 或是 + 可以将两个矩阵相加，+使用了运算符重载的功能，add通过out指定返回值赋值对象")]),t._v(" "),a("p",[t._v("add_() 是在每个tensor对象中的方法，作用是将运算后的值返回给原来对象")]),t._v(" "),a("p",[t._v("reshape(i, j)  将数据重新排列为 i 行 j 列")]),t._v(" "),a("p",[t._v("cat(x, y) 将 x 和 y 进行连结")]),t._v(" "),a("h4",{attrs:{id:"广播机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广播机制"}},[t._v("#")]),t._v(" 广播机制")]),t._v(" "),a("p",[t._v("两个张量不符合一般的运算规则时，就会将他们的维度进行扩充（一般为自身复制）")]),t._v(" "),a("h4",{attrs:{id:"数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),a("p",[t._v("Dataset Dataload")])])}),[],!1,null,null,null);a.default=r.exports}}]);